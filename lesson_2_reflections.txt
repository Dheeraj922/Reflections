Q.What happens when you initialize a repository? Why do you need to do it?

ans:A hidden file .git is created which stores metadata about the repository.
thats why we need to do that.

Q.How is the staging area different from the working directory and the repository? What value do you think it offers?

ans:Staging area contains files that are to be committed whereas working repository is the current repository.
It can be used to store files that we wish to modify later on.

Q.How can you use the staging area to make sure you have one commit per logical change?

ans:by specifying exactly what changes should be committed.

Q.What are some situations when branches would be helpful in keeping your history organized? How would branches help?

ans:Branches are helpful when we want to make changes but are not sure if those will work or not.Then we can create a branch and experiment that out
without changing anything in the master branch.we can keep both branches as well.

Q.How do the diagrams help you visualize the branch structure?

ans:diagrams are very helpful in understanding the branch structure because we can find out where that branch originated from and also the various commits that
were made in that branch.

Q.What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

ans:it is used to merge the commits by both branches into single commits.This way we can add changes made by one of the branches to the master branch
and then we can delete the branch as its commits are available now.

Q.What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

ans:Git’s automatic merge can result in merge conflicts,but the merge operation is quite convinient for us as it is done automatically.
Manual merge can prevent conflicts,but it will be quite tedious to do so.